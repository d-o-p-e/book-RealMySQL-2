# 14 - 스토어드 프로그램
-- 스토어드 프로그램은 스토어드 루틴이라고도 하는데,
    -- '스토어드 프로시저', '스토어드 함수', '트리거', '이벤트', 등을 모두 아우르는 명칭이다.

## 14.1 - 스토어드 프로그램의 장단점
-- 스토어드 프로그램은 절차적인 처리를 제공하긴 하지만 애플리케이션을 대체할 수 있을지 충분히 고려해 봐야 한다.
-- 이를 사용하기로 했다면 어떤 기능에 주로 사용할 것인지도 고려해야 한다.
-- 스토어드 프로그램의 용도를 정확하게 판단하려면 스토어드 프로그램의 장단점을 알아 둘 필요가 있다.

### 14.1.1 - 스토어드 프로그램의 장점
/*
    DB의 보안 향상 :
        - MySQL 의 스토어드 프로그램은 자체적인 보안 설정 기능을 가지고 있으며, 스토어드 프로그램 단위로 실행 권한을 부여할 수 있다.
        - 이러한 보안 기능을 조합해서 특정 테이블의 읽기와 쓰기, 특정 컬럼에 대해서만 권한 등 세밀한 권한 제어가 가능하다.
        - 주요 기능을 스토어드 프로그램으로 작성한다면 SQL 인잭션 같은 기본적인 보안 사고는 피할 수 있을 것이다.
        - MySQL 서버의 스토어드 프로그램은 입력 값의 유효성 체크를 진행한 후 동적인 SQL 문장을 생성하므로 SQL 의 문법적인 취약점을 이용한 해킹은 어렵다.

    기능의 추상화 :
        - 일련번호 생성기 같은걸 구현한다고 했을 때 MySQL 서버의 스토어드 프로그램으로 작성해서
         등록하면 개발 언어나 도구와 관계없이 일련번호 생성 규칙을 모르더라도 쉽게 활용할 수 있다.

    네트워크 소요 시간 절감 :
        - 일반적으로 애플리케이션과 데이터베이스 서버는 같은 네트워크 구간에 존재하므로 SQL 의 실행 성능에서
         네트워크를 경유하는 데 걸리는 시간은 그다지 중요하게 생각하지 않는다.
         하지만, 하나하나의 쿼리가 아주 가볍고 빠르게 처리될 수 있다면 네트워크를 경유하는 데 걸리는 시간이 문제가 될 것이다.
         즉, 실행하는데 1초가 걸리는 쿼리에서 0.1 ~ 0.3 밀리초는 무시할 수 없는 부분이다.
         예를 들어 하나의 프로그램에서 100번 200번씩 실행해야 한다면 쿼리를 스토어드 프로그램으로 구현한다면
         스토어드 프로그램을 호출할 때 한 번만 네트워크를 경유하면 되기 때문에 네트워크 소요 시간을 줄이고 성능을 개선할 수 있다.

    절차적 기능 구현 :
        - SQL 쿼리는 if나 while 같은 제어 문장을 사용할 수 없다. 그에 반해 스토어드 프로그램은 절차적인 기능을 제공한다.

    개발 업무으 ㅣ구분 :
        - 순수하게 애플리케이션 개발 조직과 SQL 개발 조직이 구분돼 있는 회사도 있다.
        - DBMS 코드를 개발하는 조직에서는 트랜잭션 단위로 DB 관련 처리를 하는 스토어드 프로그램을 만들어 API 처럼 제공하고,
         애플리케이션 개발자는 스토어드 프로그램을 호출해서 사용하는 형태로 역할을 구분해서 개발을 진행할 수도 있다.
*/

### 14.1.2 - 스토어드 프로그램의 단점
/*
    낮은 처리 성능 :
        - 스토어드 프로그램은 MySQL 엔진에서 해석되고 실행된다.
        - 절차적 코드 처리를 주목적으로 하는 것이 아니어서 스토어드 프로그램의 처리 성능이 다른 프로그래밍 언어에 비해 상대적으로 떨어진다.
        - 또한 다른 DBMS 스토어드 프로그램과 달리 MySQL 서버의 스토어드 프로그램은 실행 시마다 스토어드 프로그램의 코드가 파싱돼야 한다.

    애플리케이션 코드의 조각화 :
        - 각 기능을 담당하는 프로그램 코드가 개발 언어와 스토어드 프로그램으로 분산된다면 애플리케이션의 설치나 배포가 더 복잡하고 유지보수 또한 어려워진다.
*/


