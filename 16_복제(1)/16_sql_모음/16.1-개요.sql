## 16.1 - 개요
/**
  데이터베이스를 사용하고 운영할 때 가장 중요한 두 가지 요소를 꼽으라면 확장성(Scalability)과 가용성(Availability)가 있다.
  이 두 요소를 위해 가장 일반적으로 사용되는 기술이 복제(Replication)다.

  복제는 한 서버에서 다른 서버로 데이터가 동기화되는 것을 말하며, 원본 데이터를 가진 서버를 소스(Source) 서버, 복제된 데이터를 가지는 서버를 레클리카(Replica) 서버라고 한다.
  소스 서버에서 데이터 및 스키마에 대한 변경이 '최초'로 발생하며, 레플리카 서버는 변경 내역을 소스 서버로부터 전달받아
  가지고 있는 데이터에 반영함으로써 소스 서버에 저장된 데이터와 동기화시킨다.

  복제를 통해 레플리카 서버를 구축하는 데는 여러 가지 목적이 있다. 다음을 살펴보자.
  1. 스케일 아웃(Scale-out) :
    동일한 데이터를 가진 DB 서버를 한 대 이상 더 사용할 수 있다면 애플리케이션으로부터 실행되는 쿼리들을 분산시킬 수 있다.
    이 같은 방법을 스케일 아웃(Scale-out)이라고 하며, 스케일 아웃은 스케일 업 방식보다 갑자기 늘어나는 트래픽을 대응하는 데 훨씬 유연한 구조다.
    복제를 사용해 DB 서버를 스케일 아웃할 수 있으며, 이를 통해 서비스를 좀 더 안정적으로 운영할 수 있다.

  2. 데이터 백업 :
    DB 서버에 데이터들을 주기적으로 백업하는 것이 필수적이다.
    백업에 사용되는 툴들은 DBMS마다 방식이 다르지만 보통 데이터가 저장돼 있는 DB 서버에서 백업 프로그램이 실행되어 백업을 진행한다.
    이처럼 동일한 서버 내에서 백업이 실행되는 경우 백업 프로그램과 DBMS가 서버의 자원을 공유해서 사용하기 때문에
    심각한 경우 쿼리의 처리 속도가 느려져 서비스에 문제가 발생할 수도 있다.
    이 같은 문제를 방지하기 위해 복제를 사용해 레클리카 서버를 구축하고, 데이터 백업은 레플리카 서버에서 실행한다.
    이렇게 구축된 백업용 레플리카 서버는 소스 서버가 문제 생겼을 때를 대비해 대체 서버의 역할을 하기도 한다.

  3. 데이터 분석 :
    분석용 쿼리는 대량의 데이터를 조회하는 경우가 많고, 집계 연산을 하는 등
    쿼리 자체가 복잡하고 무거운 경우가 대부분이라서 쿼리를 실행할 때 서버의 리소스를 많이 사용하게 된다.
    따라서, 분석용 쿼리만 전용으로 실행될 수 있는 환경을 만드는 것이 좋다.

  4. 데이터의 지리적 분산 :
    DB 서버와 애플리케이션 서버가 서로 떨어져 있는 경우 두 서버 간의 통신 시간은 떨어진 거리만큼 비례해서 늘어난다.
    따라서, 애플리케이션 서버와 DB 서버가 가깝게 위치하는 것이 좋다. 만약 떨어져 있는 DB 서버의 위치를 이동시키지 못한다면
    복제를 사용해 애플리케이션 서버가 위치한 곳에 기존 DB 서버에 대한 레플리카 서버를 새로 구축해 사용함으로써 응답 속도를 개선할 수 있다.
 */
