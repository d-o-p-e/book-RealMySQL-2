# 17 - InnoDB 클러스터
/**
  MySQL 서버 자체적으로 Failover를 처리하는 기능을 제공하지 않으므로 사용자는 장애가 발생했을 때 다음의 작업을 수행해야 한다.
  1. 레플리카 서버에 설정된 읽기 모드를 해제한다.
  2. 스플릿 브레인 현상을 방지하기 위해 장애가 발생한 소스 서버에서 데이터 변경을 실행하지 못하게 한다.
  3. 애플리케이션 서버는 새로운 소스 서버를 바라보도록 커넥션 설정을 변경해야 한다.

  이 과정을 수동으로 처리하긴 번거로우므로 서버 장애를 감지해 자동으로 페일오버를 처리하는 프로그램을 직접 개발하거나,
  서드파티 HA 솔루션을 사용하게 되는데, 대표적인 것으로 'MMM'과 'MHA', 'Orchestrator' 등이 있다.
  위 서드파티들은 MySQL에 내장된 기능이 아니라서 실제 사용 환경에 맞게 수정하는 작업이 필요하며, 버전에 따른 지속적인 관리가 필요하다.

  하지만, 5.7.17 버전부터 HA 솔루션인 InnoDB 클러스터가 도입됐다.
    - 5.7 버전부터 도입됐지만 8.0 버전에서도 계속 신규 기능들이 추가되면서 빠른 속도로 발전하고 있다.
    - 따라서, 가능한 한 최신 버전의 MySQL 서버를 사용하자.
 */

## 17.1 - InnoDB 클러스터 아키텍처
/**
  InnoDB 클러스터는 MySQL 서버 내에서 고가용성을 실현하기 위해 만들어진 여러 구성 요소들의 집합체이다.
  InnoDB 클러스터를 구성하는 요소는 다음과 같다.

  - 그룹 복제 (Group Replication)
        - 소스 서버의 데이터를 레플리카 서버로 동기화하는 기본적은 복제 역할뿐만 아니라,
         복제에 참여하는 MySQL 서버들에 대한 자동화된 멤버십 관리 역할을 담당한다. (멤버십 관리 : 그룹의 새로운 멤버를 추가 및 제거하는 역할)

  - MySQL 라우터 (MySQL Router)
        - 애플리케이션 서버와 MySQL 서버 사이에서 동작하는 미들웨어 프로그램으로,
         애플리케이션이 실행한 쿼리를 적절한 MySQL 서버로 전달하는 프록시(Proxy) 역할을 한다.

  - MySQL 쉘 (MySQL Shell)
        - MySQL 클라이언트보다 확장된 기능을 가진 클라이언트 프로그램으로,
         기본적인 SQL 실행뿐만 아니라 JS 및 Python 기반의 스크립트 작성 기능과
         MySQL 서버에 대해 클러스터 구성 등의 어드민 작업을 할 수 있게 하는 AdminAPI를 제공한다.

  InnoDB 클러스터에서 데이터가 저장되는 MySQL 서버들은 그룹 복제 형태로 복제가 구성되며, 각 서버는 프라이머리 혹은 세컨더리 중 하나의 역할로 동작한다.
    - 프라이머리 : 소스 서버 (읽기 쓰기 모두 가능)
    - 세컨더리 : 레플리카 서버 (읽기만 가능)

  그룹 복제에 설정된 모드에 따라 복제 그룹 내에서 프라이머리는 하나만 존재할 수도 있고 여러 대가 존재할 수도 있다. (Q)
  그룹 복제에서는 InnoDB 스토리지 엔지만 사용할 수 있다. 이것이 바로 'InnoDB' 클러스터라고 명명된 이유이다. (Q)
  그룹 복제를 구성할 때 고가용성을 위해 MySQL 서버를 최소 3대 이상으로 구성해야 한다. (Q)
    - 서버 한 대에 장애가 발생하더라도 복제 그룹이 정상적으로 동작하기 때문에

  InnoDB 클러스터를 사용하는 환경에서 클라이언트는 MySQL 서버로 직접 쿼리를 실행하는 것이 아니라 MySQL 라우터에 연결해서 쿼리를 실행한다.
  MySQL 라우터는 InnoDB 클러스터로 구성된 MySQL 서버들에 대한 메타데이터 정보를 지니며,
  이를 바탕으로 클라이언트로부터 실행된 쿼리를 클러스터 내 적절한 MySQL 서버로 전달한다.
  따라서, 클라이언트는 현재 InnoDB 클러스터가 어떤 서버로 구성돼 있는지 알고 있을 필요가 없으며, 커넥션 정보에는 MySQL 라우터 서버만 설정해두면 된다.

  MySQL 쉘은 사용자가 InnoDB 클러스터를 생성하고 관리할 수 있도록 API를 제공하며,
  그 외에도 InnoDB 클러스터의 상태를 확인하거나 MySQL 서버의 설정을 변경하는 것과 같은 여러 가지 기능들을 제공한다.
  쉘에서 클러스터와 과련된 작업들을 진행할 때는 클러스터 내 MySQL 서버에 직접 연결해 작업해야 하며,
  단순히 쿼리를 실행하는 경우에는 MySQL 라우터로 연결해서 처리할 수도 있다.

  클러스터에서는 서버에 장애가 발생하면 그룹 복제가 먼저 이를 감지해서 자동으로 해당 서버를 복제 그룹에서 제외시키며,
  MySQL 라우터는 이러한 복제 토폴리지 변경을 인지하고 메타데이터를 갱신해서 클라이언트로부터 실행된 쿼리가 정상적으로 동작하는 서버로만 전달될 수 있도록 한다.
  즉, 기존에는 전부 수동으로 장애 복구 처리를 해야 했던 부분들이 InnoDB 클러스터에선 자동으로 처리된다.
  클라이언트에서도 MySQL에 대한 커넥션 설정 변경 등과 같은 부수적인 작업을 수행할 필요 없이 기존에 설정 그대로 쿼리를 실행하면 된다.

  InnoDB 클러스터는 MySQL에서 공식적으로 제공하는 내장 HA 솔루션으로, 구성 요소들 또한 MySQL에서 제공하는 것들로 전부 하나의 패키지로서 테스트되고 개발된다는 점에서 큰 강점이다.
 */

