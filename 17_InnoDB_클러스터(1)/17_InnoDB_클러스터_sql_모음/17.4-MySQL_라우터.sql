## 17.4 - MySQL 라우터 (MySQL Router)
/**
  애플리케이션 서버로부터 유입된 쿼리 요청을 클러스터 내 적절한 MySQL 서버로 전달하고,
  MySQL 서버에서 반환된 쿼리 결과를 다시 애플리케이션 서버로 전달하는 프록시 역할을 수행한다.

  라우터의 중요 기능
    - InnoDB 클러스터의 MySQL 구성 변경 자동 감지
    - 쿼리 부하 분산
    - 자동 페일오버

  MySQL 라우터 같이 중간 계층에서 프록시 역할을 하는 프로그램을 사용하지 않는 애플리케이션 서버에서는
  MySQL 서버에 직접 연결해서 쿼리를 실행한다.
  애플리케이션 서버에서 도메인이나 VIP(Virtual IP)를 통해 MySQL 서버에 접근하는 형태가 아니라면
  애플리케이션 서버는 MySQL 서버의 IP와 같은 정보를 커넥션 설정에 저장해서 사용하게 된다.

  이 경우 현재 사용 중인 MySQL 서버가 다른 서버로 교체되거나 혹은 새로운 MySQL 서버가 추가되는 등의
  MySQL 서버 구성 변경 작업이 발생하면 사용자는 애플리케이션 서버의 DB 커넥션 설정 정보를 수정해야 한다.

  반면 InnoDB 클러스터를 사용하는 애플리케이션 서버에서는 MySQL 라우터를 통해 MySQL 서버에 접근하므로
  커넥션 설정에는 라우터 서버 정보가 사용된다.

  MySQL 라우터에서는 클러스터 내 MySQL 서버들에 대한 정보를 메모리에 캐시하고 있으며, 주기적으로 이 정보를 갱신한다.
  클러스터의 MySQL 서버 구성이 변경되면 라우터는 갱신된 정보로 이를 감지하므로
  애플리케이션 서버의 커넥션 설정 정보를 변경할 필요가 없다.
  따라서, 사용자는 클러스터 내 MySQL 서버 추가 및 제거 등과 같은 구성 변경 작업을 애플리케이션 단의 설정 변경 없이 진행할 수 있다.

  라우터는 실행할 쿼리들을 MySQL 서버에 나눠서 처리되도록 부하 분산을 수행할 수도 있다.
  이러한 부하 분산은 MySQL 라우터에서 클러스터로 설정된 라우팅 커넥션별로 수행되는데,
  사용자는 각 커넥션에서 사용하고자 하는 부하 분산 방식을 지정할 수 있다.

  또한, MySQL 서버에 장애가 발생한 경우 자동으로 다른 MySQL 서버로 쿼리 실행을 재시도 하는데,
  이때 지정된 부하 분산 방식에 따라 재시도할 MySQL 서버가 결정된다.
 */
